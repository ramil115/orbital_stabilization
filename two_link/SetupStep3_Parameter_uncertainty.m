close all; clear; %clear classes;
clc; 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Dynamics

LinkArray = SRD_get('LinkArray');

ActualMass = [LinkArray(2).Mass; LinkArray(3).Mass];

m = sym('m', [2, 1]);
LinkArray(2).Mass = m(1);
LinkArray(3).Mass = m(2);


SymbolicEngine = SRDSymbolicEngine('LinkArray', LinkArray, 'Casadi', false);
SymbolicEngine.InitializeLinkArray();

SRD_dynamics_derive_JacobiansForLinkArray('SymbolicEngine', SymbolicEngine);

H = SRD_dynamics_derive_JSIM('SymbolicEngine', SymbolicEngine);

[in, dH] = SRD_dynamics_derive_GeneralizedInertialForces_via_dH(...
    'SymbolicEngine', SymbolicEngine, ...
    'JointSpaceInertiaMatrix', H);

C = SRD_dynamics_derive_Cmatrix_via_Christoffel(...
    'SymbolicEngine', SymbolicEngine, ...
    'JointSpaceInertiaMatrix', H);

g = SRD_dynamics_derive_GeneralizedGravitationalForces(...
    'SymbolicEngine', SymbolicEngine, ...
    'GravitationalConstant', [0; 0; -9.8]);

d = SRD_dynamics_derive_GeneralizedDissipativeForces_uniform(...
    'SymbolicEngine', SymbolicEngine, ...
    'UniformCoefficient', 1);

T = sym([1;0]);

Mass = [ActualMass, ...
        (ActualMass + [ 2;  0]), ...
        (ActualMass + [ 0;  2]), ...
        (ActualMass + [-2;  0]), ...
        (ActualMass + [ 0; -2])];

Count           = size(Mass, 2);    
description     = cell(Count, 1);  
description_HCg = cell(Count, 1); 
description_tr = cell(Count, 1); 
Handler_dynamics_generalized_coordinates_model        = cell(Count, 1);    
Handler_dynamics_HCg_model                            = cell(Count, 1);   
Handler_reduced_dynamics_and_transverse_linearization = cell(Count, 1);   

for i = 1:size(Mass, 2)
    
    Hi = subs(H, m, Mass(:, i));
    gi = subs(g, m, Mass(:, i));
    Ci = subs(C, m, Mass(:, i));
    
description{i} = SRD_generate_dynamics_generalized_coordinates_model(...
    'SymbolicEngine', SymbolicEngine, ...
    'H', Hi, ...
    'c', (Ci*SymbolicEngine.v + gi + d), ...
    'T', T, ...
    'Symbolic_ToOptimizeFunctions', true, ...
    'Casadi_cfile_name', 'g_dynamics_generalized_coordinates', ...
    'FunctionName_H', 'g_dynamics_H', ...
    'FunctionName_c', 'g_dynamics_c', ...
    'FunctionName_T', 'g_dynamics_T', ...
    'Path', ['Dynamics', num2str(i) '/']);

Handler_dynamics_generalized_coordinates_model{i} = ...
    SRD_get_handler__dynamics_generalized_coordinates_model('description', description{i});
SRD_save(Handler_dynamics_generalized_coordinates_model{i}, ['Handler_dynamics_generalized_coordinates_model', num2str(i)]);

description_HCg{i} = SRD_generate_dynamics_HCg_model(...
    'SymbolicEngine', SymbolicEngine, ...
    'H', Hi, ...
    'C', Ci, ...
    'g', gi, ...
    'T', T, ...
    'Symbolic_ToOptimizeFunctions', true, ...
    'Casadi_cfile_name', 'g_dynamics_generalized_coordinates', ...
    'FunctionName_H', 'g_dynamics_H', ...
    'FunctionName_C', 'g_dynamics_C', ...
    'FunctionName_g', 'g_dynamics_g', ...
    'FunctionName_T', 'g_dynamics_T', ...
    'Path', ['Transverse', num2str(i) '/']);

Handler_dynamics_HCg_model{i} = SRD_get_handler__dynamics_HCg_model('description', description_HCg{i});
SRD_save(Handler_dynamics_HCg_model{i}, ['Handler_dynamics_HCg_model', num2str(i)]);
Handler_dynamics_HCg_model_temp = SRD_get(['Handler_dynamics_HCg_model', num2str(i)]);


description_tr{i} = SRDt_reduced_dynamics_and_transverse_linearization(...
    'H_callable', @Handler_dynamics_HCg_model_temp.get_H, ...
    'C_callable', @Handler_dynamics_HCg_model_temp.get_C, ...
    'g_callable', @Handler_dynamics_HCg_model_temp.get_g, ...
    'T_callable', @Handler_dynamics_HCg_model_temp.get_T, ...
    'Symbolic_ToOptimizeFunctions', true, ...
    'Casadi_cfile_name', 'reduced_dynamics', ...
    'FunctionName_alpha', 'get_alpha', ...
    'FunctionName_beta', 'get_beta', ...
    'FunctionName_gamma', 'get_gamma', ...
    'FunctionName_Uff', 'get_U_ff', ...
    'FunctionName_Nff', 'get_N', ...
    'FunctionName_A', 'get_A_transv', ...
    'FunctionName_B', 'get_B_transv', ...
    'N_dof', Handler_dynamics_HCg_model_temp.dof_configuration_space_robot, ...
    'c0', [1, 0], ...
    'H0', [0, 1], ...
    'Path', ['Transverse', num2str(i) '/']);


Handler_reduced_dynamics_and_transverse_linearization{i} = ...
    SRD_get_handler_reduced_dynamics_and_transverse_linearization('description', description_tr{i});
SRD_save(Handler_reduced_dynamics_and_transverse_linearization{i}, ...
    ['Handler_reduced_dynamics_and_transverse_linearization', num2str(i)]);

end




